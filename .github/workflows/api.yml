  # API testing workflow config for CI/CD on Github

  name: API continuous integration

  # Controls when the action will run. 
  on:
    # Triggers the workflow for main branch on git push
    push:
      branches: [main]
    # Triggers workflow for or any branch on pull requests
    pull_request:
      branches:
        - '**'
    # Allows running this workflow manually from the Actions tab
    workflow_dispatch:

  # A workflow is defined of one or more jobs that can run sequentially or in parallel
  jobs:
    # This workflow contains a single job called "api_test"
    api_test:
      strategy:
        # don't cancel other jobs if one fails
        fail-fast: false
        # maximum number of jobs that can run simultaneously
        max-parallel: 1
        matrix:
          os: [ubuntu, macos]
      runs-on: ${{ matrix.os }}-latest  # Runs on latest builds of matrix OSes
      env:
        BUNDLE_WITHOUT: production # skip installing production gem (pg)
      # Steps represent a sequence of tasks that will be executed as part of the job
      steps:
        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        - uses: actions/checkout@v4
      
        # Builds on a predefined action that has Ruby installed 
        - uses: ruby/setup-ruby@v1
          with:
            bundler-cache: true # runs 'bundle install' and caches installed gems automatically

        - name: Setup test database
          env: # define secrets in Github project -> settings -> secrets
              DB_FILENAME: ${{ secrets.DB_FILENAME }}
          run: RACK_ENV=test bundle exec rake db:migrate

        - name: Run all specs
          env: # define secrets in Github project -> settings -> secrets
            SPOTIFY_CLIENT_ID: ${{ secrets.SPOTIFY_CLIENT_ID }}
            SPOTIFY_CLIENT_SECRET: ${{ secrets.SPOTIFY_CLIENT_SECRET }}
            DB_FILENAME: ${{ secrets.DB_FILENAME }}
            GPT_API_KEY: ${{ secrets.GPT_API_KEY }}
            GOOGLE_CLIENT_KEY: ${{ secrets.GOOGLE_CLIENT_KEY }}
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_REGION: ${{ secrets.AWS_REGION }}
            VOCABULARY_QUEUE: ${{ secrets.VOCABULARY_QUEUE }}
            VOCABULARY_QUEUE_URL: ${{ secrets.VOCABULARY_QUEUE_URL }}
          run: |
            rake worker:run:gh_test &
            bundle exec rake spec